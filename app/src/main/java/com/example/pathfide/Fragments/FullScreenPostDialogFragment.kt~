package com.example.mindpath.Fragments

import android.content.Context
import android.os.Bundle
import android.text.Editable
import android.text.TextWatcher
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.Button
import android.widget.TextView
import androidx.fragment.app.DialogFragment
import com.example.mindpath.R
import com.google.android.material.textfield.TextInputEditText

class FullScreenPostDialogFragment : DialogFragment() {

    // Define an interface for communication with the host fragment
    interface FullScreenPostDialogListener {
        fun onPostCreated(content: String)
        fun onProhibitedContentDetected()
    }

    private var listener: FullScreenPostDialogListener? = null

    override fun onAttach(context: Context) {
        super.onAttach(context)
        // Set the listener to the parent fragment
        listener = parentFragment as? FullScreenPostDialogListener
    }

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        return inflater.inflate(R.layout.dialog_create_post, container, false)
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)

        val editText = view.findViewById<TextInputEditText>(R.id.post_content_edit_text)
        val postButton = view.findViewById<Button>(R.id.post_button)
        val cancelButton = view.findViewById<Button>(R.id.cancel_button)
        val charCountTextView = view.findViewById<TextView>(R.id.char_count_text_view)

        // Text watcher to update character count
        editText.addTextChangedListener(object : TextWatcher {
            override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {}

            override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {
                val charCount = s?.length ?: 0
                charCountTextView.text = "$charCount/200"
            }

            override fun afterTextChanged(s: Editable?) {}
        })

        // Post button logic
        postButton.setOnClickListener {
            val content = editText.text.toString()
            if (content.isNotBlank()) {
                if (listener?.containsProhibitedWords(content) == true) {
                    listener?.onProhibitedContentDetected() // Notify prohibited content
                } else {
                    listener?.onPostCreated(content) // Notify post creation
                    dismiss()
                }
            }
        }

        // Cancel button logic
        cancelButton.setOnClickListener {
            dismiss()
        }
    }

    override fun onStart() {
        super.onStart()
        dialog?.window?.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT)
    }
}
